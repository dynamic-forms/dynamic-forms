# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: ubuntu-latest

variables:
- name: branch_pattern
  value: 17.*.x
- name: major_version_name
  value: v17

steps:
- task: Npm@1
  displayName: npm install
  inputs:
    command: custom
    customCommand: install --legacy-peer-deps
- task: Npm@1
  displayName: npm lint
  inputs:
    command: custom
    customCommand: run lint
- task: Npm@1
  displayName: npm build libs
  inputs:
    command: custom
    customCommand: run build:libs
- task: Npm@1
  displayName: npm test libs
  inputs:
    command: custom
    customCommand: run test:libs
- task: PublishTestResults@2
  displayName: Publish test results
  continueOnError: True
  inputs:
    testResultsFiles: dist/${{ variables.major_version_name }}/tests/dynamic-forms-libs.junit.xml
- task: PublishCodeCoverageResults@1
  displayName: Publish code coverage
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: dist/${{ variables.major_version_name }}/tests/cobertura-coverage.xml
- task: Npm@1
  displayName: npm publish core
  inputs:
    command: publish
    workingDir: dist/${{ variables.major_version_name }}/@dynamic-forms/core
    publishEndpoint: 'npm packages'
- task: Npm@1
  displayName: npm publish bootstrap
  inputs:
    command: publish
    workingDir: dist/${{ variables.major_version_name }}/@dynamic-forms/bootstrap
    publishEndpoint: 'npm packages'
- task: Npm@1
  displayName: npm publish material
  inputs:
    command: publish
    workingDir: dist/${{ variables.major_version_name }}/@dynamic-forms/material
    publishEndpoint: 'npm packages'
- task: Npm@1
  displayName: npm publish markdown
  continueOnError: True
  inputs:
    command: publish
    workingDir: dist/${{ variables.major_version_name }}/@dynamic-forms/markdown
    publishEndpoint: 'npm packages'
